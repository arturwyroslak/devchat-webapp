version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.11
        environment:
          DATABASE_URL: postgresql://postgres@localhost/circle_test
      - image: cimg/postgres:14.8
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "webapp/requirements.txt" }}-{{ checksum "tests/requirements.txt" }}
      - run:
          name: Install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r webapp/requirements.txt
            pip install -r tests/requirements.txt
            pip install pylint pytest
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "webapp/requirements.txt" }}-{{ checksum "tests/requirements.txt" }}
      - run:
          name: Run pylint
          command: |
            . venv/bin/activate
            pylint webapp
            pylint tests
      - run:
          name: Check for webapp changes
          command: |
            git diff --quiet HEAD^ HEAD webapp || echo "export WEBAPP_CHANGED=true" >> $BASH_ENV
      - run:
          name: Run pytest
          command: |
            . venv/bin/activate
            if [ "$WEBAPP_CHANGED" = "true" ]; then
              pytest tests
            else
              echo "No changes in webapp, skipping pytest for webapp"
            fi

  build-and-push-image:
    executor: aws-ecr/default
    steps:
      - checkout
      - run:
          name: Generate image tag
          command: |
            echo "export IMAGE_TAG=$(date +%m%d)-$(git rev-list --count HEAD)" >> $BASH_ENV
      - aws-ecr/build-and-push-image:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: ${AWS_REGION}
          registry-id: AWS_ACCOUNT_ID
          repo: ${REPO_NAME}
          dockerfile: Dockerfile
          path: .
          tag: ${CIRCLE_TAG:-${IMAGE_TAG}} # use the CIRCLE_TAG for the Docker image tag, or the generated IMAGE_TAG if it does not exist

workflows:
  build_and_test_and_push_image:
    jobs:
      - build-and-test
      - build-and-push-image:
          filters:
            branches:
              only: main  # run this job for updates on main branch
            tags:
              only: /^v.*/  # run this job for tags that start with 'v'
